{"version":3,"sources":["services/persons.js","components/Filter.js","components/Form.js","components/PhonebookEntries.js","components/Notification.js","App.js","index.js"],"names":["alternativeBaseURL","exported","getAll","axios","get","create","person","post","deleteByID","id","delete","updatePhoneNumber","put","Filter","props","htmlFor","value","onChange","onFocus","Form","onSubmit","className","inputNameAttr","inputPhoneNumberAttr","type","PhonebookEntries","phonebookEntries","persons","map","name","phone","onClick","onDelete","_id","filter","toLowerCase","includes","Notification","message","App","useState","setPersons","newName","setNewName","newPhoneNumber","setNewPhoneNumber","setFilter","setMessage","messageType","setMessageType","event","target","useEffect","personService","then","response","data","preventDefault","find","window","confirm","existingPerson","console","log","setTimeout","catch","error","p","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86fd2180.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n// const baseURL = 'https://andfxx27-phonebook-api.herokuapp.com/rest/persons'\r\nconst alternativeBaseURL = 'http://localhost:3001/rest/people'\r\n\r\nconst getAll = () => {\r\n  return axios.get(alternativeBaseURL)\r\n}\r\n\r\nconst create = person => {\r\n  return axios.post(alternativeBaseURL, person)\r\n}\r\n\r\nconst deleteByID = id => {\r\n  return axios.delete(`${alternativeBaseURL}/${id}`)\r\n}\r\n\r\nconst updatePhoneNumber = (id, person) => {\r\n  return axios.put(`${alternativeBaseURL}/${id}`, person)\r\n}\r\n\r\nconst exported = {\r\n  getAll,\r\n  create,\r\n  deleteByID,\r\n  updatePhoneNumber\r\n}\r\n\r\nexport default exported","import React from 'react'\r\nimport '../App.css'\r\n\r\n/**\r\n * Filter component\r\n * \r\n * Component for filtering phonebook entries by person's name\r\n * @param {*} props \r\n * @returns JSX\r\n */\r\nconst Filter = (props) => {\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id}>Filter</label>\r\n      <input\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        onFocus={props.onFocus}\r\n        id={props.id}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\nimport '../App.css'\r\n\r\n/**\r\n * Form component\r\n * \r\n * Component for form used to add new phonebook entry\r\n * @param {*} props \r\n * @returns JSX\r\n */\r\nconst Form = (props) => {\r\n  return (\r\n    <>\r\n      <h2>Add new phonebook entry</h2>\r\n      <form \r\n        onSubmit={props.onSubmit}\r\n        className='form'>\r\n        <label htmlFor='inputName'>Name</label>\r\n        <input\r\n          value={props.inputNameAttr.value}\r\n          onChange={props.inputNameAttr.onChange}\r\n          onFocus={props.inputNameAttr.onFocus}\r\n          id='inputName'\r\n        />\r\n\r\n        <label htmlFor='inputPhoneNumber'>Phone</label>\r\n        <input\r\n          value={props.inputPhoneNumberAttr.value}\r\n          onChange={props.inputPhoneNumberAttr.onChange}\r\n          onFocus={props.inputPhoneNumberAttr.onChange}\r\n          id='inputPhoneNumber'\r\n        />\r\n\r\n        <div>\r\n          <button type='submit'>Add</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\nimport '../App.css'\r\n\r\n/**\r\n * PhonebookEntries component\r\n * \r\n * Component for displaying phonebook entries (name and phone no.)\r\n * @param {*} props \r\n * @returns JSX\r\n */\r\nconst PhonebookEntries = (props) => {\r\n  let phonebookEntries = props.persons.map(\r\n    person => {\r\n      return (\r\n        <li key={person.name} className='note'>\r\n          <span>{person.name}</span>\r\n          <span className='margin-md'>{person.phone}</span>\r\n          <button \r\n            className='delete-btn' \r\n            onClick={() => props.onDelete(person._id)}>\r\n            Delete\r\n          </button>\r\n        </li>  \r\n      )\r\n    } \r\n  )\r\n\r\n  if (props.filter !== \"\") {\r\n    const filteredPersons = props.persons.filter(\r\n      person => person.name.toLowerCase().includes(props.filter.toLowerCase())\r\n    )\r\n    phonebookEntries = filteredPersons.map(\r\n      person => {\r\n        return (\r\n          <li key={person.name} className='note'>\r\n            <span>{person.name}</span>\r\n            <span className='margin-md'>{person.phone}</span>\r\n            <button \r\n              className='delete-btn' \r\n              onClick={() => props.onDelete(person.id)}>Delete\r\n            </button>\r\n          </li>  \r\n        )\r\n      } \r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Phonebook Entries</h2>\r\n      <ul>\r\n        {phonebookEntries}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PhonebookEntries","import React from 'react'\r\nimport '../App.css'\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null || type === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './App.css'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport PhonebookEntries from './components/PhonebookEntries'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhoneNumber, setNewPhoneNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [messageType, setMessageType] = useState(null)\n\n  const handleNewPhonebookEntry = (event) => {\n    event.preventDefault()\n    \n    const person = {\n      name: newName,\n      phone: newPhoneNumber\n    }\n    \n    if (persons.find(person => person.name === newName)) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {\n        let existingPerson = persons.find(person => person.name === newName)\n        personService\n          .updatePhoneNumber(existingPerson._id, {...existingPerson, phone: person.phone})\n          .then(response => {\n            console.log(response)\n            setPersons(persons.map(\n              person => {\n                if (person._id === response.data._id) {\n                  return response.data\n                }\n\n                return person\n              }\n            ))\n\n            setMessage(`Success update phone number for entry ${response.data.name}!`)\n            setMessageType('success')\n            setTimeout(() => {\n              setMessage(null)\n              setMessageType(null)\n            }, 3000)\n          })\n          .catch(error => {\n            console.log(error)\n            setPersons(persons.filter(p => p.name !== person.name))\n            setMessage(`${existingPerson.name} has already been removed from the server!`)\n            setMessageType('error')\n            setTimeout(() => {\n              setMessage(null)\n              setMessageType(null)\n            }, 3000)\n          })\n      }\n\n      return\n    }\n\n    personService\n      .create(person)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewPhoneNumber('')\n        setMessage(`Success add new phonebook entry!`)\n        setMessageType('success')\n        setTimeout(() => {\n          setMessage(null)\n          setMessageType(null)\n        }, 3000)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  const handleDeletePhonebookEntry = id => {\n    if (window.confirm('Are you sure you want to delete this entry?')) {\n      console.log(`The phonebook entry with id ${id} will be deleted`)\n      personService\n        .deleteByID(id)\n        .then(response => {\n          setPersons(persons.filter(\n            person => person._id !== id\n          ))\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    }\n  }\n\n  // Handle filter input\n  const handleFilterEntriesByNameOnChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handleFilterEntriesByNameOnFocus = (event) => {\n    setFilter('')\n  }\n  \n  // Handle name input\n  const handleNameInputOnChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNameInputOnFocus = (event) => {\n    setNewName('')\n  }\n\n  // Handle phone number input\n  const handlePhoneNumberInputOnChange = (event) => {\n    setNewPhoneNumber(event.target.value)\n  }\n\n  const handlePhoneNumberInputOnFocus = (event) => {\n    setNewPhoneNumber('')\n  }\n\n  const inputNameAttr = {\n    value: newName,\n    onChange: handleNameInputOnChange,\n    onFocus: handleNameInputOnFocus\n  }\n\n  const inputPhoneNumberAttr = {\n    value: newPhoneNumber,\n    onChange: handlePhoneNumberInputOnChange,\n    onFocus: handlePhoneNumberInputOnFocus\n  }\n\n  // useEffect for fetching data from the server; called after first render is done\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      <Filter \n        value={filter} \n        onChange={handleFilterEntriesByNameOnChange}\n        onFocus={handleFilterEntriesByNameOnFocus}\n        id='inputFilter'\n      />\n\n      <Form \n        onSubmit={handleNewPhonebookEntry}\n        inputNameAttr={inputNameAttr}\n        inputPhoneNumberAttr={inputPhoneNumberAttr}\n      />\n\n      <Notification message={message} type={messageType} />\n\n      <hr />\n\n      <PhonebookEntries \n        filter={filter}\n        persons={persons}\n        onDelete={handleDeletePhonebookEntry}\n      />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}